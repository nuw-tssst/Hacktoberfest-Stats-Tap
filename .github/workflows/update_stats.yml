name: Update stats - current day

# manually fetch data for the current day in October or Oct 31 if not October
on:
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: push-${{ github.ref }}
  cancel-in-progress: false

jobs:
  run-parallel-api-fetch:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        job: [1, 2, 3, 4]

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          repository: ${{ secrets.REPO_NAME }}
          ref: main
          token: ${{ secrets.REPO_TOKEN }}
          fetch-depth: 0
          persist-credentials: false

      - name: Set up
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install
        env:
          PIP_DISABLE_PIP_VERSION_CHECK: "1"
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run
        env:
          GH_TOKEN: ${{ secrets[format('GH_TOKEN_{0}', matrix.job)] }}
          JOB_ID: ${{ matrix.job }}
          NUM_JOBS: ${{ strategy.job-total }}
        run: |
          MONTH=$(date -u +%m)
          if [ "$MONTH" -eq 10 ]; then
            DAY=$(date -u +%d | sed 's/^0//')
          else
            DAY=31
          fi
          IS_AM=$([ "$(date -u +%p)" = "AM" ] && echo true || echo false)
          python hack_stats_fetch.py --start "$DAY" --end "$DAY" --job "${JOB_ID}" --jobs "${NUM_JOBS}" --am "${IS_AM}"

      - name: Move files to artifacts
        env:
          JOB_ID: ${{ matrix.job }}
        run: |
          mkdir -p "out/job${JOB_ID}"
          shopt -s nullglob
          matches=(files/*_${JOB_ID}.*)
          if ((${#matches[@]})); then
            cp -f "${matches[@]}" "out/job${JOB_ID}/"
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: job${{ matrix.job }}
          path: out/job${{ matrix.job }}/
          if-no-files-found: ignore
          retention-days: 1

  run-stats-update:
    runs-on: ubuntu-latest
    needs: run-parallel-api-fetch
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          repository: ${{ secrets.REPO_NAME }}
          ref: main
          token: ${{ secrets.REPO_TOKEN }}
          fetch-depth: 0
          persist-credentials: false

      - name: Set up
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install
        env:
          PIP_DISABLE_PIP_VERSION_CHECK: "1"
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: job*
          path: _aggregate
          merge-multiple: true

      - name: Move files from artifacts
        run: |
          mkdir -p files
          shopt -s nullglob
          matches=(_aggregate/*/*.*)
          if ((${#matches[@]})); then
            mv -f "${matches[@]}" "files/"
          fi

      - name: Run
        run: |
          python hack_stats_update.py --year $(date -u +'%Y')

      - name: Update repo
        env:
          GH_TOKEN: ${{ secrets.REPO_TOKEN }}
          REPO: ${{ secrets.REPO_NAME }}
        run: |
          git add files/$(date -u +'%Y')_hack_stats.* || true
          if ! git diff --cached --quiet; then
            git config user.name "Adam Ross"
            git config user.email "14985050+R055A@users.noreply.github.com"
            git commit -m "Update $(date -u +'%Y') Hacktoberfest stats"

            for attempt in 1 2 3; do
              git pull --rebase "https://x-access-token:${GH_TOKEN}@github.com/${REPO}.git" main || true
              if git push "https://x-access-token:${GH_TOKEN}@github.com/${REPO}.git" HEAD:main; then
                break
              fi
              echo "Push fail #$attempt..."
              sleep $(((RANDOM % 8) + 3))
            done
          fi
